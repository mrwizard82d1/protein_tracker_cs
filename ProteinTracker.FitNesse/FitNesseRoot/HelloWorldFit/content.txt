This page a simple test of the integration of FitNesse and fitsharp.

----

I define both the command pattern and the test runner.
The arguments"%m" and "%p" are supplied by FitNesse at run-time. The "%m" argument contains
the actual runner, and the "%p" argument contains host name, port and other information.

This same web page, http://fitnesse.996250.n3.nabble.com/fitsharp-problem-with-fitnesse-td10409.html, 
has code using the full path of the runner and the assembly. I'll try that route.

!define COMMAND_PATTERN {%m -f fitnesse.fitserver.FitServer,c:\cygwin64\home\ljones\professional\software\lib\dotnet\fitsharp\fitsharp-2.2-4.0\fit.dll %p}
!define TEST_RUNNER {c:\cygwin64\home\ljones\professional\software\lib\dotnet\fitsharp\fitsharp-2.2-4.0\Runner.exe}

Remember that the values of variables must occur within curly braces "{}." (If you forget 
to put the value inside the braces, when FitNesse displays the page, it will just display
the line itself.

----

In addition, I define the path to my .NET assembly that contains my fixtures - 
but I'll do that later. :)

----

And now for something completely tabular. The table header must contain the fully qualified 
name of a class containing the test fixture (similar to the Java fixture in protein_tracker_java).

!|ProteinTrackerFitSharp.HelloWorld     |
|FirstName|LastName|FullName?           |
|Lawrence |Jones   |Lawrence Allan Jones|

!contents -R2 -g -p -f -h